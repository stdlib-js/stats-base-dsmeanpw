{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/dsmeanpw.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { ndarray as dssumpw } from '@stdlib/blas-ext-base-dssumpw';\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a single-precision floating-point strided array using pairwise summation with extended accumulation and returning an extended precision result.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* import Float32Array from '@stdlib/array-float32';\n*\n* var x = new Float32Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = dsmeanpw( 4, x, 2, 1 );\n* // returns 1.25\n*/\nfunction dsmeanpw( N, x, strideX, offsetX ) {\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn x[ offsetX ];\n\t}\n\treturn dssumpw( N, x, strideX, offsetX ) / N;\n}\n\n\n// EXPORTS //\n\nexport default dsmeanpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a single-precision floating-point strided array using pairwise summation with extended accumulation and returning an extended precision result.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* import Float32Array from '@stdlib/array-float32';\n*\n* var x = new Float32Array( [ 1.0, -2.0, 2.0 ] );\n*\n* var v = dsmeanpw( x.length, x, 1 );\n* // returns ~0.3333\n*/\nfunction dsmeanpw( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default dsmeanpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport dsmeanpw from './dsmeanpw.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( dsmeanpw, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default dsmeanpw;\n"],"names":["dsmeanpw","N","x","strideX","offsetX","NaN","dssumpw","ndarray","stride2offset","setReadOnly"],"mappings":";;wUA4CA,SAASA,EAAUC,EAAGC,EAAGC,EAASC,GACjC,OAAKH,GAAK,EACFI,IAEG,IAANJ,GAAuB,IAAZE,EACRD,EAAGE,GAEJE,EAASL,EAAGC,EAAGC,EAASC,GAAYH,CAC5C,CCRA,SAASD,EAAUC,EAAGC,EAAGC,GACxB,OAAOI,EAASN,EAAGC,EAAGC,EAASK,EAAeP,EAAGE,GAClD,CCjBAM,EAAAT,EAAA,UAAAO"}